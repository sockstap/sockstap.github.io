<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://sockstap.github.io/news/article-104097.htm" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>如何使用线程池执行定时任务？</title>
        <meta name="description" content="在 Java 语言中，有两个线程池可以执行定时任务：ScheduledThreadPool 和 SingleThreadScheduledExecutor，其中 SingleThreadSchedul" />
        <link rel="icon" href="/assets/website/img/sockstap/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="SockSTap免费机场订阅节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://sockstap.github.io/news/article-104097.htm" />
    <meta property="og:site_name" content="SockSTap免费机场订阅节点官网" />
    <meta property="og:title" content="如何使用线程池执行定时任务？" />
    <meta property="og:image" content="https://sockstap.github.io/uploads/20241105/49ca11688a81e9825f3e861b2767ad79.webp" />
        <meta property="og:release_date" content="2025-04-25T07:09:29" />
    <meta property="og:updated_time" content="2025-04-25T07:09:29" />
        <meta property="og:description" content="在 Java 语言中，有两个线程池可以执行定时任务：ScheduledThreadPool 和 SingleThreadScheduledExecutor，其中 SingleThreadSchedul" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="如何使用线程池执行定时任务？">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!--=====CSS=======-->
    <link rel="stylesheet" href="/assets/website/css/sockstap/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/website/css/sockstap/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/sockstap/aos.css">
    <link rel="stylesheet" href="/assets/website/css/sockstap/metisMenu.css">
    <link rel="stylesheet" href="/assets/website/css/sockstap/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/sockstap/fontawesome.css">
    <link rel="stylesheet" href="/assets/website/css/sockstap/slick-slider.css">
    <link rel="stylesheet" href="/assets/website/css/sockstap/nice-select.css">
    <link rel="stylesheet" href="/assets/website/css/sockstap/fonts.css">
    <link rel="stylesheet" href="/assets/website/css/sockstap/master.css">
    <link rel="stylesheet" href="/assets/website/css/G.css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-SNP4K622BD"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-SNP4K622BD');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <section>
        <div id="preloader">
            <div id="ctn-preloader" class="ctn-preloader ctn-preloader1">
                <div class="animation-preloader">
                    <!-- <div class="spinner"></div> -->
                    <div class="cp-preloader cp-preloader_type2">SockSTap
                        <span class="cp-preloader__letter" data-preloader="S">S</span>
                        <span class="cp-preloader__letter" data-preloader="O">O</span>
                        <span class="cp-preloader__letter" data-preloader="C">C</span>
                        <span class="cp-preloader__letter" data-preloader="K">K</span>
                        <span class="cp-preloader__letter" data-preloader="S">S</span>
                        <span class="cp-preloader__letter" data-preloader="T">T</span>
                        <span class="cp-preloader__letter" data-preloader="A">A</span>
                        <span class="cp-preloader__letter" data-preloader="P">P</span>
                    </div>
                </div>
                <div class="loader-section section-left"></div>
                <div class="loader-section section-right"></div>
            </div>
        </div>
    </section>
    <!--=====Preloader end=======-->
    <!--=====Header start=======-->
    <header id="header" class="header header-2 header-absolute d-none d-lg-block">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="header-elements">
                        <div class="header_menu_area">
                            <div class="logo">
                                <a href="/">
                                                                        <span>SockSTap</span>
                                                                    </a>
                            </div>
                            <div class="main-menu">
                                <div class="menu-wrap">
                                    <ul class="menu_list">
                                                                                <li><a href="/">首页</a></li>
                                                                                <li><a href="/free-nodes/">免费节点</a></li>
                                                                                <li><a href="/paid-subscribe/">推荐机场</a></li>
                                                                                <li><a href="/client.htm">客户端</a></li>
                                                                                <li><a href="/news/">新闻资讯</a></li>
                                                                            </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <!--=====Header end=======-->
    <!--=====Mobile header start=======-->
    <div class="mobile-header mobile-header-4 d-lg-none">
        <div class="container-fluid">
            <div class="col-12">
                <div class="mobile-header-elements">
                    <div class="mobile-logo">
                        <a href="/">SockSTap</a>
                    </div>
                    <div class="mobile-nav-icon">
                        <i class="fa-solid fa-bars"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="mobile-sidebar">
        <div class="menu-close">
            <i class="fa-solid fa-xmark"></i>
        </div>
        <div class="mobile-nav">
                        <ul class="mobile-nav-list">
                <li><a href="/">首页</a></li>
            </ul>
                        <ul class="mobile-nav-list">
                <li><a href="/free-nodes/">免费节点</a></li>
            </ul>
                        <ul class="mobile-nav-list">
                <li><a href="/paid-subscribe/">推荐机场</a></li>
            </ul>
                        <ul class="mobile-nav-list">
                <li><a href="/client.htm">客户端</a></li>
            </ul>
                        <ul class="mobile-nav-list">
                <li><a href="/news/">新闻资讯</a></li>
            </ul>
                    </div>
    </div>
    <!--=====Mobile header end=======-->
    <!--=====Inner hero Start=======-->
    <div class="inner-1 bg-13" id="home">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 m-auto">
                    <div class="inner-title text-center">
                        <h1>如何使用线程池执行定时任务？</h1>
                        <p>
                          <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!--=====Inner hero end=======-->
    <!--=====About start=======-->
    <div class="about-area section-padding bg5-left">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                <div class="xcblog-blog-detail">
                      				  				  				<p>在 Java 语言中，有两个线程池可以执行定时任务：ScheduledThreadPool 和 SingleThreadScheduledExecutor，其中 SingleThreadScheduledExecutor 可以看做是 ScheduledThreadPool 的单线程版本，它的用法和 ScheduledThreadPool 是一样的，所以本文重点来看 ScheduledThreadPool 线程池的使用。<br /> ScheduledThreadPool 执行定时任务的方法有以下 3 个：</p> <ol> <li>使用 schedule 方法执行定时任务，只执行一次定时任务。</li> <li>使用 scheduleAtFixedRate 方法执行定时任务，执行多次定时任务。</li> <li>使用 scheduleWithFixedDelay 方法执行定时任务，执行多次定时任务。</li> </ol> <p>接下来我们看这 3 个方法的具体使用和区别。</p> <h2 id="1schedule">1.schedule</h2> <p>schedule 方法只能执行一次定时任务，它需要传递 3 个参数：</p> <ul> <li>第 1 个参数：传递一个任务，Runnable 或 Callable 对象；</li> <li>第 2 个参数：添加定时任务后，再过多久开始执行定时任务；</li> <li>第 3 个参数：时间单位，配合参数 2 一起使用。</li> </ul> <p>下面我们创建一个 3 秒以后执行的定时任务：</p> <pre><code class="language-java">import java.time.LocalDateTime; import java.util.concurrent.Executors; import java.util.concurrent.ScheduledExecutorService; import java.util.concurrent.TimeUnit;  public class ScheduledThreadPoolExample {     public static void main(String[] args) throws InterruptedException {         // 创建 ScheduledThreadPool 线程池         ScheduledExecutorService threadPool = Executors.newScheduledThreadPool(10);         System.out.println("schedule 方法添加任务：" + LocalDateTime.now());         threadPool.schedule(new Runnable() {             @Override             public void run() {                 System.out.println("执行 schedule 方法：" + LocalDateTime.now());             }         }, 3, TimeUnit.SECONDS); // 3s 之后执行          // 以下代码是给业务方法一个时间对照信息         TimeUnit.SECONDS.sleep(10); // 休眠 10s         System.out.println("当前时间：" + LocalDateTime.now());     } }</code></pre> <p>以上程序的执行结果如下图所示：<br /><img decoding="async" src="https://cdn.nlark.com/yuque/0/2022/png/92791/1643285135216-0a5be9dc-bde7-40d8-8d44-7bf2f40da008.png#clientId=ue0197902-a877-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=229&amp;id=u1bcadc1c&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=458&amp;originWidth=1812&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=80487&amp;status=done&amp;style=none&amp;taskId=uc0ed874c-a6d6-496c-9984-8878a85487e&amp;title=&amp;width=906" alt="image.png"><br /> 从上述结果中可以看出，使用 schedule 方法只能执行一次定时任务。</p> <h2 id="2scheduleatfixedrate">2.scheduleAtFixedRate</h2> <p>scheduleAtFixedRate 方法可以执行多次定时任务，此方法需要 4 个参数：</p> <ul> <li>第 1 个参数：传递一个任务，Runnable 或 Callable 对象；</li> <li>第 2 个参数：添加定时任务后，再过多久开始执行定时任务；</li> <li>第 3 个参数：定时任务执行的时间间隔；</li> <li>第 4 个参数：时间单位，配合参数 2 和参数 3 一起使用。</li> </ul> <p>下面我们创建一个 3 秒后执行的定时任务，每个定时任务执行的时间间隔为 2 秒，实现代码如下：</p> <pre><code class="language-java">import java.time.LocalDateTime; import java.util.concurrent.Executors; import java.util.concurrent.ScheduledExecutorService; import java.util.concurrent.TimeUnit;  public class ScheduledThreadPoolExample {     public static void main(String[] args) throws InterruptedException {         // 创建 ScheduledThreadPool 线程池         ScheduledExecutorService threadPool = Executors.newScheduledThreadPool(10);         System.out.println("scheduleAtFixedRate 方法添加任务：" + LocalDateTime.now());         threadPool.scheduleAtFixedRate(new Runnable() {                                            @Override                                            public void run() {                                                System.out.println("执行 scheduleAtFixedRate 方法：" + LocalDateTime.now());                                                // 休眠 2s                                                try {                                                    TimeUnit.SECONDS.sleep(2);                                                } catch (InterruptedException e) {                                                    e.printStackTrace();                                                }                                            }                                        },                 3L, // 3s 后开始执行定时任务                 2L, // 定时任务的执行间隔为 2s                 TimeUnit.SECONDS); // 描述上面两个参数的时间单位     } }</code></pre> <p>以上程序的执行结果如下图所示：<br /><img decoding="async" src="https://cdn.nlark.com/yuque/0/2022/png/92791/1643287036829-da0d6744-f637-410a-bd9c-8dd59a5b68e8.png#clientId=u5b0cec9e-c3d0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=324&amp;id=u82026f29&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=647&amp;originWidth=2600&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=205224&amp;status=done&amp;style=none&amp;taskId=u53be7687-5476-4f20-83a5-0dbe5bb49ca&amp;title=&amp;width=1300" alt="image.png"><br /> 从上述结果可以看出，当任务添加成功之后，3s 后开始执行第一个定时任务，之后每隔 2s 执行一次定时任务。</p> <h2 id="3schedulewithfixeddelay">3.scheduleWithFixedDelay</h2> <p>scheduleWithFixedDelay 方法的使用和 scheduleAtFixedRate 类似，但执行效果完全不同，这个很容易理解如果效果一样就不用创建两个方法了。<br /><strong>scheduleWithFixedDelay 方法是在方法执行完成之后，再隔 N 秒执行下一个定时任务，和 scheduleAtFixedRate 的固定时间执行不同，scheduleWithFixedDelay 方法的执行受定时任务执行的时长影响</strong>，比如以下代码：</p> <pre><code class="language-java">import java.time.LocalDateTime; import java.util.concurrent.Executors; import java.util.concurrent.ScheduledExecutorService; import java.util.concurrent.TimeUnit;  public class ScheduledThreadPoolExample {     public static void main(String[] args) throws InterruptedException {         // 创建 ScheduledThreadPool 线程池         ScheduledExecutorService threadPool = Executors.newScheduledThreadPool(10);         System.out.println("scheduleWithFixedDelay 方法添加任务：" + LocalDateTime.now());         threadPool.scheduleWithFixedDelay(new Runnable() {                                               @Override                                               public void run() {                                                   System.out.println("执行 scheduleWithFixedDelay 方法：" + LocalDateTime.now());                                                   // 休眠 2s                                                   try {                                                       TimeUnit.SECONDS.sleep(2);                                                   } catch (InterruptedException e) {                                                       e.printStackTrace();                                                   }                                               }                                           },                 3L, // 3s 后开始执行定时任务                 2L, // 定时任务执行完 2s 之后，再执行下一个定时任务                 TimeUnit.SECONDS); // 描述上面两个参数的时间单位     } }</code></pre> <p>以上程序的执行结果如下图所示：<br /><img decoding="async" src="https://cdn.nlark.com/yuque/0/2022/png/92791/1643287771381-5cda78b7-f7c4-41c0-9f25-89c5a7369259.png#clientId=u5b0cec9e-c3d0-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=263&amp;id=u4fea7e83&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=525&amp;originWidth=2086&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=168985&amp;status=done&amp;style=none&amp;taskId=ue6611b7a-f289-466f-8bcf-70790ec08e2&amp;title=&amp;width=1043" alt="image.png"><br /> 从上述结果可以看出，定时任务在 3s 之后开始执行，以后每隔 4s 执行一次，这 4s 包含了，定时任务执行花费的 2s，加上每隔 2s 执行一次的时间间隔，也就是说<strong>scheduleWithFixedDelay 是在任务执行完 N 秒之后，再执行下一次定时任务</strong>。</p> <h2 id="总结">总结</h2> <p>线程池执行定时任务的实现方法有 3 个：</p> <ol> <li>使用 schedule 方法执行定时任务，只执行一次定时任务。</li> <li>使用 scheduleAtFixedRate 方法执行定时任务，执行多次定时任务，它的执行时间间隔是固定的，不受定时任务执行时长影响（定时任务时间间隔 &gt; 任务执行时间）。</li> <li>使用 scheduleWithFixedDelay 方法执行定时任务，执行多次定时任务，它是在定时任务执行完之后，再隔 N 秒开始执行下一次定时任务，它的执行时间受定时任务执行时长影响</li> </ol> 			                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-103435.htm">宠物猫疫苗是什么疫苗类型（宠物猫疫苗是什么疫苗类型的）</a></p>
                                        <p>下一个：<a href="/news/article-104098.htm">Python 图_系列之纵横对比  Bellman-Ford 和  Dijkstra 最短路径算法</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-77217.htm" title="知名宠物品牌有哪些（宠物品牌哪个好）">知名宠物品牌有哪些（宠物品牌哪个好）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-10-free-node-subscribe.htm" title="SockSTap节点订阅每天更新18.8M/S免费节点订阅链接">SockSTap节点订阅每天更新18.8M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-99652.htm" title="被野猫抓伤轻微出血需要打狂犬疫苗吗（被野猫抓伤轻微出血需要打狂犬疫苗吗有用吗）">被野猫抓伤轻微出血需要打狂犬疫苗吗（被野猫抓伤轻微出血需要打狂犬疫苗吗有用吗）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-4-node-share.htm" title="SockSTap节点订阅每天更新20.3M/S免费节点订阅链接">SockSTap节点订阅每天更新20.3M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-30-free-subscribe-node.htm" title="SockSTap节点订阅每天更新21.9M/S免费节点订阅链接">SockSTap节点订阅每天更新21.9M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-free-high-speed-nodes.htm" title="SockSTap节点订阅每天更新21.6M/S免费节点订阅链接">SockSTap节点订阅每天更新21.6M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-15-node-share.htm" title="SockSTap节点订阅每天更新22.1M/S免费节点订阅链接">SockSTap节点订阅每天更新22.1M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-21-free-high-speed-nodes.htm" title="SockSTap节点订阅每天更新19.4M/S免费节点订阅链接">SockSTap节点订阅每天更新19.4M/S免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-96716.htm" title="JavaScript的this指向原理">JavaScript的this指向原理</a></li>
                        <li class="py-2"><a href="/news/article-74477.htm" title="C#中的委托和事件_C#教程">C#中的委托和事件_C#教程</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">75</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
    <!--=====About end=======-->
        <!--=====Footer start=======-->
    <footer class="footer-area footer-2 bg9">
        <div class="container">
            <div class="row align-items-center copyright2">
                <div class="col-lg-6">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">SockSTap免费机场订阅节点官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-lg-6 text-right">
                    <div class="social social2">
                        <ul>
                            <li><a data-bs-toggle="tooltip" title="Linked in" href="#"><i class="fa-brands fa-linkedin-in"></i></a>
                            </li>   
                            <li><a data-bs-toggle="tooltip" title="Facebook" href="#"><i class="fa-brands fa-facebook-f"></i></a></li>
                            <li><a data-bs-toggle="tooltip" title="Instagram" href="#"><i class="fa-brands fa-instagram"></i></a></li>
                            <li><a data-bs-toggle="tooltip" title="TikTok" href="#"><i class="fa-brands fa-tiktok"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!--=====Footer end=======-->
    <!--=====Up arrow start=======-->
    <div class="progress-wrap">
        <svg class="progress-circle svg-content" width="100%" height="100%" viewbox="-1 -1 102 102">
            <path d="M50,1 a49,49 0 0,1 0,98 a49,49 0 0,1 0,-98"></path>
        </svg>
    </div>
    <!--=====Up arrow end=======-->
    <script src="/assets/website/js/frontend/sockstap/jquery-3-6-0.min.js"></script>
    <script src="/assets/website/js/frontend/sockstap/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/sockstap/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/sockstap/aos.js"></script>
    <script src="/assets/website/js/frontend/sockstap/fontawesome.js"></script>
    <script src="/assets/website/js/frontend/sockstap/slick-slider.js"></script>
    <script src="/assets/website/js/frontend/sockstap/mesonry.js"></script>
    <script src="/assets/website/js/frontend/sockstap/jquery.magnific-popup.js"></script>
    <script src="/assets/website/js/frontend/sockstap/metisMenu.min.js"></script>
    <script src="/assets/website/js/frontend/sockstap/jquery.nice-select.js"></script>
    <script src="/assets/website/js/frontend/sockstap/jquery.countup.min.js"></script>
    <script src="/assets/website/js/frontend/sockstap/popper.min.js"></script>
    <script src="/assets/website/js/frontend/sockstap/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/sockstap/main.js"></script>
    <script src="/assets/website/js/frontend/sockstap/app.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>